/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package localfiletransformservce;

import com.alibaba.fastjson.JSON;
import socketconnect.callback.MessageType;
import socketconnect.callback.SocketCallback;
import socketconnect.con.SocketConnect;
import socketconnect.exception.SocketException;
import socketconnect.message.SocketFileMessage;
import socketconnect.message.SocketMessage;
import socketconnect.model.Connecter;

import javax.swing.*;
import java.io.File;
import java.util.ArrayList;

/**
 *
 * @author wuzefeng
 */
public class LocalFileTransformServce extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public LocalFileTransformServce() {
        initComponents();
        initViews();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();
        jDialog5 = new javax.swing.JDialog();
        jDialog6 = new javax.swing.JDialog();
        jFileChooser2 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lsConncetor = new javax.swing.JList<>();
        btnStartService = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbAddress = new javax.swing.JLabel();
        btnSaveLocation = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tvMessage = new javax.swing.JTextArea();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog6Layout = new javax.swing.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("本地文件传输");

        jLabel2.setText("连接者列表：");

        lsConncetor.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lsConncetor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lsConncetorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lsConncetor);

        btnStartService.setText("开启服务");
        btnStartService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServiceActionPerformed(evt);
            }
        });

        jLabel3.setText("当前ip：");

        btnSaveLocation.setText("设置文件保存地址");
        btnSaveLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveLocationActionPerformed(evt);
            }
        });

        tvMessage.setEditable(false);
        tvMessage.setColumns(20);
        tvMessage.setRows(5);
        jScrollPane1.setViewportView(tvMessage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnSaveLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnStartService)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(152, 152, 152)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(lbAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnStartService))
                        .addGap(41, 41, 41)
                        .addComponent(btnSaveLocation)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private ArrayList<Connecter> connectList= new ArrayList<>();;
    
    
    private SocketCallback callback=new SocketCallback(){
        
        @Override
        public void startService(String ip) {
            btnStartService.setText("关闭服务");
            lbAddress.setText(ip);
            connectList.clear();
            
        }

        @Override
        public void connected(Connecter connector) {
            connectList.add(connector);
            listModel.addElement(connector.getConnectorName());
        }

        @Override
        public void connectError(SocketException se) {
        }

        @Override
        public void disconnected(Connecter connector) {
            connectList.remove(connector);
            listModel.removeElement(connector);
        }

        @Override
        public void receiveMessage(SocketMessage sm, Connecter connector) {
            
            //文本信息
            if(sm.getMessageType().equals(MessageType.MT)){
                FileRequest request=JSON.parseObject(sm.getData(), FileRequest.class);
                switch (request.getCode()) {
                    case 0:
                        showReceiveFileDilaog(connector.getSocketId(),request);
                        break;
                    case 1:
                        SocketConnect.get().sendFileMessage(connector.getSocketId(),request.getFilePath());
                        break;
                    default:
                        addMessage("文件被拒绝");
                        break;
                }
                
                
            }else if(sm.getMessageType().equals(MessageType.MF)){
                String filePath;
                if(location!=null){
                    filePath=location + File.separator + ((SocketFileMessage) sm).getText();
                }else{
                    filePath=((SocketFileMessage) sm).getText();
                }
                boolean succ=FileUtil.saveFile(filePath,sm.getData());
                addMessage("保存"+succ+":"+filePath);
            }else{
                addMessage("获取了其他的文件");  
            }
            
        }
        
    };
    
    
    
    
    private void btnStartServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServiceActionPerformed
        // TODO add your handling code here:
        
        if (evt.getActionCommand().equals("开启服务")) {
            startService();
        } else {
            closeService();
            btnStartService.setText("开启服务");
            listModel.clear();
        }
        
    }//GEN-LAST:event_btnStartServiceActionPerformed

    private void lsConncetorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lsConncetorMouseClicked
        // TODO add your handling code here:
        
        //双击发送文件
        if(evt.getClickCount()==2){
            int socketId=connectList.get(lsConncetor.getSelectedIndex()).getSocketId();
            selectFile(socketId);
        }
    }//GEN-LAST:event_lsConncetorMouseClicked

    private void btnSaveLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveLocationActionPerformed
        // TODO add your handling code here:
        
        
        JFileChooser dlg = new JFileChooser();
        dlg.setDialogTitle("选择文件保存地址");
        dlg.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = dlg.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION){//选择

            File file = dlg.getSelectedFile();
            if(file.isDirectory()){//文件夹
               location=file.getAbsolutePath();
            }else{
                JOptionPane.showMessageDialog(null, "只能选择文件夹", "错误", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnSaveLocationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocalFileTransformServce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocalFileTransformServce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocalFileTransformServce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocalFileTransformServce.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocalFileTransformServce().setVisible(true);    
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveLocation;
    private javax.swing.JButton btnStartService;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JList<String> lsConncetor;
    private javax.swing.JTextArea tvMessage;
    // End of variables declaration//GEN-END:variables

    /**
     * 开启服务
     */
    private void startService() {
        SocketConnect.init();
        SocketConnect.get().setSocketCallback(callback).connect();
        addMessage("开启服务");
    }
    
    
    private String location="文件传输";
    
    
    /**
     * 关闭服务
     */
    private void closeService(){
        SocketConnect.get().closeAllConnect();
        lbAddress.setText("");
        addMessage("关闭服务");
    }
    
    private DefaultListModel listModel;

    private void initViews() {
        
        listModel = new DefaultListModel();       
        lsConncetor.setModel(listModel);
    }
    
    
    private void showReceiveFileDilaog(int socketId,FileRequest request){
        int response=JOptionPane.showConfirmDialog(null, "是否接受文件"+request.getFileName(), "接收文件",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        //否
        if(response==1){
            request.setCode(2);
           
            addMessage("拒绝接受文件");
        }else if(response==0){//是
            request.setCode(1);
            addMessage("等待文件接受");

        }
        SocketConnect.get().sendTextMessage(socketId, JSON.toJSONString(request));
    }
    
    
    private void addMessage(String messgae){
        tvMessage.setText(tvMessage.getText()+"\n"+messgae);
    }
    
    
    private void selectFile(int socketId){
        JFileChooser dlg = new JFileChooser();
        dlg.setDialogTitle("发送文件");
        int result = dlg.showOpenDialog(this);
        
        if(result==JFileChooser.CANCEL_OPTION){//取消
            
            addMessage("取消发送");
            
           
        }else {//选择
            
            FileRequest request=new FileRequest();
            request.setCode(0);
           
            String fileName = dlg.getSelectedFile().getName();
            String filePath = dlg.getSelectedFile().getAbsolutePath();
            request.setFileName(fileName);
            request.setFilePath(filePath);
            SocketConnect.get().sendTextMessage(socketId,JSON.toJSONString(request));   
            JOptionPane.showMessageDialog(null, "文件发送请求已经发送，客户端允许后即可发送", "文件发送请求", JOptionPane.ERROR_MESSAGE);
            
        }
    }
}
